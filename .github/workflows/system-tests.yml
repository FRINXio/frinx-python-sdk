name: conductor system tests

on:
  workflow_dispatch:
  schedule:
    - cron: '00 17 * * *'

  push:
    branches:
      - main

jobs:
  system-tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.4.2"]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Clone ga_workflows_collected_data
        if: ${{ ( success() || failure() ) &&  ( steps.execute_tests.outcome != 'skipped' ) }}
        uses: actions/checkout@v3
        with:
          repository: FRINXio/ga_workflows_collected_data
          ref: main
          token: ${{ secrets.token_ga_workflows_collected_data }}
          path: ./ga_workflows_collected_data
      - name: Install package dependencies
        run: poetry install
      - name: Execute worker and dependency
        run: docker compose -f tests/execute_sdk/docker-compose.yml up -d
      - name: Run system tests
        run: |
          export CONDUCTOR_URL_BASE="http://localhost:8080/api/"
          mkdir -p logs
          echo "measure_duration_start=$(date +%s)" >> "$GITHUB_ENV"
          poetry run pytest tests/system_tests/ -vv \
            --collect-stats-folder="ga_workflows_collected_data/" \
            --junit-xml=logs/test-results.xml
      - name: Execute tests - measure duration
        if: ${{ ( success() || failure() ) &&  ( steps.execute_tests.outcome != 'skipped' ) }}
        run: |
          DURATION=$(( ($(date +%s) - ${{ env.measure_duration_start }}) /60 ))
          FRINX_CONDUCTOR_VERSION=$(docker container inspect $(docker ps --filter name=conductor-server -q) --format '{{ .Config.Labels.git_commit }}')
          FRINX_CONDUCTOR_WORKERS_AND_PYTHON_SDK_VERSION=$(git describe --tags)
          filename=$(echo ${{ github.workflow }} | sed 's| |_|g')
          echo "$(date +%s)000,${{ github.workflow }},${{ github.run_id }},${{ github.event_name }},${{ job.status }},${FRINX_CONDUCTOR_VERSION}+${FRINX_CONDUCTOR_WORKERS_AND_PYTHON_SDK_VERSION},${DURATION}" >> ./ga_workflows_collected_data/$filename
          cd ./ga_workflows_collected_data
          git status
          git config -l --show-scope
          git config --global user.email "support@frinx.io"
          git config --global user.name "FRINXrepo"
          git add $filename ${filename}.json
          git commit -am "${{ github.workflow }} tests in ${DURATION} minutes"
          git pull -r
#          git push -f origin main

      - name: Collect logs to file
        if: always()
        run: |
          mkdir -p logs
          for container in $(docker ps --format '{{ .Names }}')
          do
            cp $(docker container inspect --format='{{.LogPath}}' $container) logs/$container.log
          done
      - name: Upload pytest logs
        if: ${{ ( success() || failure() ) &&  ( steps.execute_tests.outcome != 'skipped' ) }}
        uses: actions/upload-artifact@v3.1.1
        with:
           name: ${{ github.workflow }}_pytest_logs.zip
           path: |
              ${{ github.workspace }}/logs/
           if-no-files-found: error
           retention-days: 1
      - name: Surface failing tests
        if: always()
        uses: pmeier/pytest-results-action@main
        with:
          path: logs/test-results.xml
